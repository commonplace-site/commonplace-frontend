import { SystemLogEntry, SystemLogsState } from "@/types/logs";
import { create } from 'zustand';

const defaultSystemLogs: SystemLogEntry[] = [
    {
        id: 'log-1',
        timestamp: '2025-05-07T08:10:00Z',
        type: 'auth',
        source: 'auth-service',
        message: 'User login',
        userId: 'user-1',
        username: 'Alex',
        metadata: { ip: '10.0.0.12', method: 'OAuth' },
    },
    {
        id: 'log-2',
        timestamp: '2025-05-07T08:12:32Z',
        type: 'deployment',
        source: 'vercel-hook',
        message: 'Frontend deployed successfully',
        userId: 'user-1',
        username: 'Alex',
        metadata: { commit: '8e91d3', branch: 'main' },
    },
    {
        id: 'log-3',
        timestamp: '2025-05-07T09:01:15Z',
        type: 'module',
        source: 'diagnostic',
        message: 'Module started: Diagnostic',
        userId: 'user-2',
        username: 'alice',
        metadata: { module: 'diagnostic', language: 'English' },
    },
    {
        id: 'log-4',
        timestamp: '2025-05-07T09:05:50Z',
        type: 'aalam',
        source: 'language-test',
        message: 'language-test module was updated to support adaptive scoring. The new algorithm adjusts difficulty based on past performance trends. Deployment completed without errors on staging. QA will review the output consistency across user roles. Next step: monitor logs for anomalies over the next 48 hours.',
        userId: 'user-2',
        username: 'aalam',
        metadata: { module: 'language-test' },
    },
    {
        id: 'log-5',
        timestamp: '2025-05-07T10:20:00Z',
        type: 'info',
        source: 'teacher-dashboard',
        message: 'User access denied - blocked',
        userId: 'user-3',
        username: 'bob',
    },
    {
        id: 'log-6',
        timestamp: '2025-05-07T10:33:10Z',
        type: 'system',
        source: 'scheduler',
        message: 'Scheduled cleanup completed',
        userId: 'user-4',
        username: 'anonymous',
        metadata: { action: 'purged_old_logs' },
    },
    {
        id: 'log-7',
        timestamp: '2025-05-07T10:45:21Z',
        type: 'flag',
        source: 'admin-console',
        message: 'Toggled feature flag: darkMode',
        userId: 'user-4',
        username: 'anonymous',
        metadata: { enabled: true },
    },
    {
        id: 'log-8',
        timestamp: '2025-05-07T09:05:50Z',
        type: 'upload',
        source: 'intake-module',
        message: 'Student upload file',
        userId: 'user-2',
        username: 'alice',
        metadata: { fileType: 'audio', module: 'speaking-practice' },
    },
    {
        id: 'log-9',
        timestamp: '2025-05-07T09:05:50Z',
        type: 'aalam',
        source: 'dev-portal',
        message: 'Aalam auto-suggested schema correction for Upload Module.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-10',
        timestamp: '2025-05-07T09:07:12Z',
        type: 'upload',
        source: 'intake',
        message: 'User Alice uploaded a new PDF file.',
        username: 'alice',
        userId: 'user-2',
    },
    {
        id: 'log-11',
        timestamp: '2025-05-07T09:08:34Z',
        type: 'auth',
        source: 'auth-service',
        message: 'Carol failed login attempt — blocked account.',
        username: 'carol',
        userId: 'user-4',
    },
    {
        id: 'log-12',
        timestamp: '2025-05-07T09:09:20Z',
        type: 'deployment',
        source: 'vercel',
        message: 'Frontend deployed successfully to production.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-13',
        timestamp: '2025-05-07T09:10:44Z',
        type: 'module',
        source: 'language-test',
        message: 'Diagnostic scoring logic updated.',
        username: 'bob',
        userId: 'user-3',
    },
    {
        id: 'log-14',
        timestamp: '2025-05-07T09:12:01Z',
        type: 'flag',
        source: 'admin-console',
        message: 'Feature flag "UptakeEnabled" turned off.',
        username: 'carol',
        userId: 'user-4',
    },
    {
        id: 'log-15',
        timestamp: '2025-05-07T09:13:26Z',
        type: 'system',
        source: 'dev-portal',
        message: 'Log cleanup task completed — 312 entries removed.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-16',
        timestamp: '2025-05-07T09:14:39Z',
        type: 'info',
        source: 'workspace',
        message: 'Notebook feature marked as stable.',
        username: 'alice',
        userId: 'user-2',
    },
    {
        id: 'log-17',
        timestamp: '2025-05-07T09:16:00Z',
        type: 'aalam',
        source: 'aalam-core',
        message: 'Aalam flagged mismatch in user permission layer.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-18',
        timestamp: '2025-05-07T09:17:13Z',
        type: 'upload',
        source: 'intake',
        message: 'Video file rejected due to unsupported format.',
        username: 'bob',
        userId: 'user-3',
    },
    {
        id: 'log-19',
        timestamp: '2025-05-07T09:18:45Z',
        type: 'deployment',
        source: 'ci-cd',
        message: 'Staging environment updated with latest commit.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-20',
        timestamp: '2025-05-07T09:19:57Z',
        type: 'module',
        source: 'i1-radio',
        message: 'Audio comprehension logic improved for better scoring.',
        username: 'carol',
        userId: 'user-4',
    },
    {
        id: 'log-21',
        timestamp: '2025-05-07T09:21:14Z',
        type: 'system',
        source: 'backend',
        message: 'Memory usage spike detected in dev environment.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-22',
        timestamp: '2025-05-07T09:22:42Z',
        type: 'aalam',
        source: 'dev-portal',
        message: 'Aalam proposed deprecation of unused setting key.',
        username: 'Alex',
        userId: 'user-1',
    },
    {
        id: 'log-23',
        timestamp: '2025-05-07T09:24:03Z',
        type: 'info',
        source: 'admin-console',
        message: 'All logs archived successfully.',
        username: 'carol',
        userId: 'user-4',
    },
];

export const useSystemLogsStore = create<SystemLogsState>((set) => ({
    logs: defaultSystemLogs,
    setLogs: (logs) => set({ logs }),
    addLog: (log) =>
        set((state) => ({
            logs: [...state.logs, log],
        })),
    deleteLog: (id) =>
        set((state) => ({
            logs: state.logs.filter((log) => log.id !== id),
        })),
    updateLog: (id, updatedFields) =>
        set((state) => ({
            logs: state.logs.map((log) =>
                log.id === id ? { ...log, ...updatedFields } : log
            ),
        })),
}));